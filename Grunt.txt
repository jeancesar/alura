Grunt
----------------------------------------------------
"npm install" => O comando lerá de package.json todos os módulos de que sua aplicação depende baixando-os todos de uma só vez, levando em consideração cada versão utilizada. Instalação já existente
"npm init" => Por uma questão de organização, o Node.js pode tomar nota de todos os módulos de que sua aplicação depende num arquivo chamado package.json. Podemos criá-lo através do próprio npm executando o seguinte comando dentro da pasta projeto.
"npm install grunt --save-dev" => O comando baixará a versão mais atual do Grunt gravando-a dentro da pasta node_modules. Esta pasta guarda todos os módulos usado pelo seu projeto. O parâmetro --save-dev adiciona a dependência no arquivo package.json
"npm install grunt-cli -g" => É importante que você tenha permissão de administrador já que estamos instalando o módulo globalmente através do parâmetro -g. Este módulo nos permite chamar o comando 'grunt' em qualquer local em nosso terminal.
"npm install grunt-contrib-copy --save-dev" instala o plugin grunt-contrib-copy
"npm install grunt-contrib-clean --save-dev" => instala o plugin grunt-contrib-clean
"grunt.registerTask('dist', ['clean', 'copy']);" => registrar novas tasks que chamam outras na sequência que definirmos. Repare que a função acima recebe como primeiro parâmetro o nome da nossa task. O segundo é um array com o nome de todas as tasks já configuradas pelo Grunt. A ordem é importante, pois a primeira será executada antes da segunda e por ai vai.

CONCATENACAO E MINIFICAÇÃO
npm install grunt-contrib-concat --save-dev
npm install grunt-contrib-uglify --save-dev
npm install grunt-contrib-cssmin --save-dev
npm install grunt-usemin --save-dev
O grunt-usemin é um plugin que facilita incrivelmente a configuração das tasks envolvidas no processo de merge e minificação. Só precisamos configurar sua task para que ela gere automaticamente os parâmetros de configuração para os três plugins que vimos anteriormente.
npm install grunt-rev --save-dev => responsável em renomear os arquivos adicionando seu hash como prefixo
npm install grunt-contrib-coffee --save-dev => compilador de coffescript
npm install grunt-contrib-less --save-dev => compilador de less
npm install grunt-contrib-watch --save-dev => executaremos automaticamente toda vez que novos arquivos forem criados ou modificados através da task watch.
npm install grunt-contrib-jshint --save-dev => validação do codigo JS sem a necessidade de um navegador ou coisa do tipo.
npm install grunt-browser-sync --save-dev => sincronização de paginas em varios dispositivos.


O arquivo Gruntfile.js é onde configuramos tarefas (tasks). Todo o código ficará envolto por uma função wrapper que recebe como parâmetro o objeto do Grunt.